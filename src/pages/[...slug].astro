---
import { getCollection } from 'astro:content';
import { format } from 'date-fns';
import { groupBy } from 'lodash';
import { ContentSwitch } from '../components/ContentSwitch';
import Layout from '../layouts/Layout.astro';
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntriesEn = await getCollection('en');
  const blogEntriesMk = await getCollection('mk');

  const allEntries = [...blogEntriesMk, ...blogEntriesEn];

  const grouped = groupBy(allEntries, 'slug');

  return Object.keys(grouped).map((key) => {
    console.log(key);
    console.log(grouped[key]);

    return {
      params: { slug: key },
      props: { entries: grouped[key] },
    };
  });
  // return {
  //   {params: grouped}
  // };
  // const entries = blogEntriesMk.map((entry) => ({
  //   params: { slug: entry.slug },
  //   props: { entry },
  // }));

  // console.log(entries);

  // return entries;
}
// 2. When it's time to render, you can get the entry directly from the prop
// const { entry } = Astro.props;
// console.log(entry);
// const { Content } = await entry.render();

const { entries } = Astro.props;
console.log(entries);
const enEntry = entries.find((p: any) => p.collection === 'en');
const mkEntry = entries.find((p: any) => p.collection === 'mk');

let MkContents,
  EnContents = null;

if (enEntry) {
  const rendered = await enEntry.render();
  EnContents = rendered.Content;
}

if (mkEntry) {
  const rendered = await mkEntry.render();
  MkContents = rendered.Content;
}

// const { Content } = await entry.render();
---

<Layout title="Blog" image={mkEntry.data.image}>
  <div class="pt-10 mb-20">
    <ContentSwitch client:only="solid">
      <div slot="contentsMk" lang="mk" class="flex w-full items-center justify-center prose-a:text-secondary-500">
        {
          mkEntry ? (
            <article class="prose lg:prose-xl font-transitional">
              <meta name="post-meta-mk" data-title={mkEntry?.data.title} data-description={mkEntry?.data.description} />
              <h1>{mkEntry?.data.title}</h1>
              <date>🗓️ {format(mkEntry?.data.date, 'yyyy-MM-dd')}</date>
              <MkContents />
            </article>
          ) : (
            <h1>Овој напис сеуште не е достапен на македонски!</h1>
          )
        }
      </div>
      <div slot="contentsEn" lang="en" class="flex w-full items-center justify-center prose-a:text-secondary-500">
        {
          enEntry ? (
            <article class="prose lg:prose-xl font-transitional">
              <meta name="post-meta-en" data-title={enEntry?.data.title} data-description={enEntry?.data.description} />
              <h1>{enEntry?.data.title}</h1>
              <date>🗓️ {format(enEntry?.data.date, 'yyyy-MM-dd')}</date>
              <EnContents />
            </article>
          ) : (
            <h1>This article hasn't been translated yet!</h1>
          )
        }
      </div>
    </ContentSwitch>
  </div>
</Layout>

<script>
  import { languageState } from '../data/store';

  languageState.listen((val) => {
    if (val === 'mk') {
    }

    if (val === 'en') {
    }
  });
</script>

<style>
  date {
    @apply text-base-400 mb-6;
  }
</style>
