---
import { Footer } from '../components/Footer';
import Head from '../components/Head.astro';
import { Header } from '../components/Header';

import { Icon } from 'astro-icon';
export interface Props {
  title: string;
  description?: string;
  image?: string;
}

const { title, description, image } = Astro.props;
// const currentPath = Astro.url.pathname;
---

<!DOCTYPE html>
<html lang="en">
  <Head title={title} description={description || 'BeerJS Skopje'} image={image} />
  <body>
    <Header client:only="solid" />
    <main class="flex flex-col max-w-screen overflow-x-hidden">
      <slot />
      <div
        class="flex flex-col w-full overflow-x-hidden h-screen min-h-screen absolute top-[0] max-w-screen z-40 overflow-y-hidden pb-10"
      >
        <img
          src="/img/beerjs.svg"
          class="h-[986px] w-[730px] absolute right-0 md:right-[-140px] md:-rotate-[7deg] top-[-110px] opacity-10 md:opacity-30 xl:opacity-70 og-logo shrink-0 object-cover z-40"
        />
        <div
          id="particles"
          class="h-[986px] w-[730px] absolute right-0 md:right-[-140px] md:-rotate-[7deg] top-[-110px] opacity-10 md:opacity-30 xl:opacity-70 og-logo shrink-0 object-cover z-40"
        >
        </div>
      </div>
    </main>
    <Footer client:only="solid" />
    <style>
      html {
        /* background: linear-gradient(to bottom, #262022f5, #262022), url(/community_bg.jpg) center -250px no-repeat,
          #262022;
        background-size: cover; */
        background: #262022;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
    </style>
    <style>
      #particles {
        mask: url('/beerjs.mask.svg');
      }
      /* #particles canvas {
    @apply h-[1000px] w-[747px] absolute right-0 md:right-[-150px] top-[-120px] opacity-10 md:opacity-30 xl:opacity-70 og-logo shrink-0 object-cover z-20;
  } */
    </style>

    <script>
      import { load } from '../components/Particles';

      document.addEventListener('DOMContentLoaded', async () => {
        await load();
      });
    </script>
    <script>
      if ('serviceWorker' in navigator) {
        navigator.serviceWorker.ready.then((registration) => {
          registration.unregister();
        });
      }
    </script>
  </body>
</html>
