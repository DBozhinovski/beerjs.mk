{"version":3,"sources":["webpack:///./src/templates/categories.js"],"names":["Content","styled","div","props","theme","colors","bg","media","tablet","phone","Category","pageContext","data","console","log","allMarkdownRemark","title","config","siteTitle","category","to","scale","edges","map","node","frontmatter","date","excerpt","timeToRead","slug","path","categories","key","postQuery"],"mappings":"2FAAA,oKAWMA,EAAUC,IAAOC,IAAV,yEAAGD,CAAH,iNAKS,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAGvCC,IAAMC,OAGND,IAAME,OA2CFC,UAhCE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAG/B,OAFAC,QAAQC,IAAIF,EAAKG,mBAGf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,MAAK,gBAAkBC,IAAOC,UAAzB,MAAwCP,EAAYQ,WACjE,kBAAC,IAAD,KACE,kBAAC,OAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,CAAMC,MAAO,MAEf,kBAAC,IAAD,OAEF,kBAACrB,EAAD,KACE,kBAAC,IAAD,KAAeW,EAAYQ,UAC1BP,EAAKG,kBAAkBO,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,IAAD,CACER,MAAOQ,EAAKC,YAAYT,MACxBU,KAAMF,EAAKC,YAAYC,KACvBC,QAASH,EAAKG,QACdC,WAAYJ,EAAKI,WACjBC,KAAML,EAAKC,YAAYK,KACvBC,WAAYP,EAAKC,YAAYM,WAC7BC,IAAKR,EAAKC,YAAYK,cAoB7B,IAAMG,EAAS","file":"component---src-templates-categories-js-f3cd4fd508830729bf38.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\n// import kebabCase from 'lodash/kebabCase';\nimport { Layout, Wrapper, Header, SectionTitle, Logo, Navigation, Article } from '../components';\nimport { media } from '../utils/media';\n\nimport config from '../../config/SiteConfig';\n\nconst Content = styled.div`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 2rem 4rem;\n  background-color: ${props => props.theme.colors.bg};\n  z-index: 9000;\n  margin-top: -3rem;\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`;\n\n// const Title = styled.h3`\n//   position: relative;\n//   text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n//   margin-bottom: 0.75rem;\n// `;\n\nconst Category = ({ pageContext, data }) => {\n  console.log(data.allMarkdownRemark);\n\n  return (\n    <Layout>\n      <Wrapper>\n        <Helmet title={`Categories | ${config.siteTitle} | ${pageContext.category}`} />\n        <Header>\n          <Link to=\"/\">\n            <Logo scale={0.6} />\n          </Link>\n          <Navigation />\n        </Header>\n        <Content>\n          <SectionTitle>{pageContext.category}</SectionTitle>\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <Article\n              title={node.frontmatter.title}\n              date={node.frontmatter.date}\n              excerpt={node.excerpt}\n              timeToRead={node.timeToRead}\n              slug={node.frontmatter.path}\n              categories={node.frontmatter.categories}\n              key={node.frontmatter.path}\n            />\n          ))}\n        </Content>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default Category;\n\nCategory.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.object.isRequired,\n  }).isRequired,\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport const postQuery = graphql`\n  query($category: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            date(formatString: \"DD.MM.YYYY\")\n            path\n            category\n          }\n          excerpt\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}